############################## Homematic Binding ##############################
#
#
# https://github.com/openhab/openhab/wiki/Homematic-Binding
#
# Examples: https://github.com/openhab/openhab/wiki/Samples-Item-Definitions
#
# Hostname / IP address of the Homematic CCU
homematic:host=192.168.1.2

# Hostname / IP address for the callback server (optional, default is auto-discovery)
# This is normally the IP / hostname of the local host (but not "localhost" or "127.0.0.1"). 
# homematic:callback.host=

# Port number for the callback server. (optional, default is 9123)
# homematic:callback.port=

# The interval in seconds to check if the communication with the CCU is still alive.
# If no message receives from the CCU, the binding restarts. (optional, default is 300)
# homematic:alive.interval=

# The interval in seconds to reconnect to the Homematic server (optional, default is disabled)
# If you have no sensors which sends messages in regular intervals and/or you have low communication, 
# the alive.interval may restart the connection to the Homematic server to often.
# The reconnect.interval disables the alive.interval and reconnects after a fixed period of time. 
# Think in hours when configuring (one hour = 3600)
# homematic:reconnect.interval=

############################## Tinkerforge  Binding ###################################
#
# https://github.com/openhab/openhab/wiki/Tinkerforge-Binding
#
# IP addresses / Hostnames  of the hosts running the brickd (optional port 
# separated by a colon, defaults to 4223)
# OPTIONAL: default is 6000ms tinkerforge.refresh=<value in milliseconds> 
tinkerforge:hosts=192.168.1.210 localhost:4223


######################### Logging Persistence Service #################################
#
# the logback encoder pattern to use to write log entries
# see http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout for all options
# the item name is available as the "logger" name, the state as the "msg"
logging:pattern=%date{ISO8601} - %-25logger: %msg%n

# Timeout - or 'refresh interval', in milliseconds, of the worker thread
tcp:refreshinterval=250
